name: 'Terragrunt Deploy Infra'
on:
  push:
    branches: [ "develop" ]
  pull_request:
env:
  tf_version: 'latest'
  tg_version: 'latest'
  tf_working_dir: './terraform'
  AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}


jobs:
  terragrunt:
    name: 'Terragrunt'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@master
        
      - name: 'Terragrunt Format'
        uses: the-commons-project/terragrunt-github-actions@master
        continue-on-error: true
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_binary: 'terraform'
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 'Terragrunt Init'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}


      - name: 'Terragrunt Plan'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Terragrunt Apply'
        uses: the-commons-project/terragrunt-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tg_actions_version: ${{ env.tg_version }}
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


# Had a quick go to see if I could run a test - no luck in a few quick attempts, 
# interented to know about getting hold of teh outputs from terragrunt in Github actions


#      - name: 'Terragrunt Output URL'
#        uses: the-commons-project/terragrunt-github-actions@master
#        with:
#          tf_actions_version: ${{ env.tf_version }}
#          tg_actions_version: ${{ env.tg_version }}
#          tf_actions_subcommand: 'output'
#          tf_actions_working_dir: ${{ env.tf_working_dir }}
#          tf_actions_comment: true
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


#      - name: Sleep for 60 seconds - wait for container to come up
#        run: sleep 60s
#        shell: bash

#      - uses: hashicorp/setup-terraform@v2

#      - name: Test connection
#        run: curl -k $(terraform output alb_nginx_url)
#        shell: bash